apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"
    defaultConfig {
        applicationId "com.example.architecturedemo"
        minSdkVersion 15
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    dataBinding {
        enabled = true
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation"org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation "androidx.recyclerview:recyclerview:1.1.0"
    implementation 'androidx.core:core-ktx:1.2.0'
    implementation "com.google.android.material:material:1.1.0"
    implementation "androidx.legacy:legacy-support-v4:1.0.0"
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.1'

    def lifecycle_version = "2.2.0"
    def arch_version = "2.1.0"
    def navigationVersion = "2.2.1"

    // ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    // LiveData
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    // Lifecycles only (without ViewModel or LiveData)
//    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"
//    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"

    // Saved state module for ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycle_version"

    implementation "androidx.navigation:navigation-fragment-ktx:$navigationVersion"
    implementation "androidx.fragment:fragment:1.2.2"
    implementation "androidx.fragment:fragment-ktx:1.2.2"

//
//    // Annotation processor
//    kapt "androidx.lifecycle:lifecycle-compiler:$lifecycle_version"
//    // alternately - if using Java8, use the following instead of lifecycle-compiler
//    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"
//
//    // optional - ReactiveStreams support for LiveData
//    implementation "androidx.lifecycle:lifecycle-reactivestreams-ktx:$lifecycle_version"
//
//    // optional - Test helpers for LiveData
//    testImplementation "androidx.arch.core:core-testing:$arch_version"


    // https://github.com/google/gson
    implementation 'com.google.code.gson:gson:2.8.6'

    // https://github.com/bumptech/glide
    implementation 'com.github.bumptech.glide:glide:4.11.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.11.0'

    def room_version = "2.2.4"

    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version" // For Kotlin use kapt instead of annotationProcessor

    // optional - Kotlin Extensions and Coroutines support for Room
    implementation "androidx.room:room-ktx:$room_version"

    // optional - RxJava support for Room
//    implementation "androidx.room:room-rxjava2:$room_version"

    // optional - Guava support for Room, including Optional and ListenableFuture
//    implementation "androidx.room:room-guava:$room_version"

    // Test helpers
//    testImplementation "androidx.room:room-testing:$room_version"


    // 协程
    // https://github.com/hltj/kotlinx.coroutines-cn/blob/master/README.md#using-in-your-projects
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.3'

    // region 网络层
    // https://github.com/google/gson
    implementation 'com.google.code.gson:gson:2.8.6'

    // https://github.com/square/okhttp/tree/master/okhttp-logging-interceptor
    implementation("com.squareup.okhttp3:logging-interceptor:4.4.0")

    def retrofit_version = "2.7.2"

    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"

    // https://github.com/square/retrofit/blob/master/retrofit-converters/gson/README.md
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    // ednregion
}
